{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11120\viewh16600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\b\fs24 \cf0 Structure
\b0 \
\
1. Assign Variables:\
	Assign variables, arrays, elements that will be used in the code. (Universal variables)\
\
2. Setup()\{\}\
	Initiate variables assigned above. This section of the code only runs once in the beginning.\
 \
	Note: It is a good habit to always initiate variables. When a variable is allocated a storage space in the computer, there sometimes might be junk data in that space already, if not cleared out and reset, might mess up the outcome of your code.\
\
3. Draw()\{\}\
	The actual function of the code (what you would like the variables to do). This section of the code runs repeatedly after the program begins.\
\
4. Function()\{\}\
	Sometime, to serve your purpose, your code might have unnecessarily repetition. With functions, this repetition can be reduced and simplified to make your structure more clear and efficient. For example: if you wanted to create a program that bounced 100 different balls around, instead of hand coding everything, you can create a function that makes bouncing balls and send different diameter variables into that function to create different balls. (Please see code examples.)\
\
* Order\
	The order code runs is from top to bottom, what comes later will overwrite what came before.\
\
* Scope\
	Universal variables: Variables that are assigned at the top of the code, outside of all and any curly brackets. Accessible to all sections of the code.\
	Local variables: Variables assigned locally within a certain scope, bound by curly brackets "\{\}". The scope is from the beginning of the curly bracket "\{" to the end "\}". Any section outside of the scope the variable is in cannot access the variable. \
	(For creative ways to utilize scope, see examples.)\
	**Coming soon**\
\
* \
\
\
}